<div class="game-page" data-good-ans-id="<%= @room.id %>">
  <div class="game-header">
    <div class="game-title">
      朝までそれ正解
    </div>
    <div class="header-buttons">
      <%# <button class="end-game-button">ゲームをやめる</button> %>
      <% if current_user.id == @room.host_id %>
        <%= link_to "ルームに戻る", lobby_path(@room, back_room: true), data: { turbo: false }, class: "back-room-button" %>
      <% end %>
    </div>
  </div>

  <div class="game-instruction">
    全員を納得させる答えを考えよう
  </div>

  <div class="question-container">
    <div class="question-label">問題</div>
    <div class="question-text" id="theme"><%= @current_theme %></div>
  </div>

  <div class="answer-input-container">
    <div class="answer-placeholder">回答を入力してください</div>
    <%= form_with(url: post_game_path, method: :post, local: false, data: { turbo: true }, id: "answer-form") do |form| %>
      <%= form.text_area :content, required: true, rows: 3, class: "answer-field" %>
      <div class="answer-buttons-row">
        <%= form.submit "回答する", class: "submit-answer-button" %>
        <% if current_user.id == @room.host_id %>
          <button type="button" class="submit-answer-button show-theme-button" id="change-theme-btn">お題を変える</button>
        <% end %>
      </div>
    <% end %>
  </div>
</div>


<script>
document.addEventListener("turbo:submit-end", function(e) {
  if (e.target.id === "answer-form" && e.detail.success) {
    window.location.href = "<%= answer_path %>";
  }
});

// お題を変えるボタンのクリックイベント
document.addEventListener('DOMContentLoaded', function() {
  const changeThemeBtn = document.getElementById('change-theme-btn');
  if (changeThemeBtn) {
    changeThemeBtn.addEventListener('click', function() {
      fetch('<%= draw_path(@room) %>', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          console.log('お題を変更しました');
          // ActionCableで新しいテーマが送信されるので、少し待ってからリロード
          setTimeout(() => {
            location.reload();
          }, 500);
        }
      })
      .catch(error => {
        console.error('Error:', error);
      });
    });
  }
});
</script>

<style>
.answer-buttons-row {
  display: flex;
  flex-direction: row;
  gap: 12px;
  justify-content: center;
  align-items: center;
  margin-top: 8px;
}

.show-theme-button {
  background: #d00; /* 例: 赤色 */
  color: #fff;
}
.show-theme-button:hover {
  background: #a00;
}
</style>

